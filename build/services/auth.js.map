{"version":3,"sources":["../../src/services/auth.js"],"names":["user","_id","Error","findById","me","requireAuth","decodeToken","token","arr","split","verify","JWT_SECRET"],"mappings":";;;;;;;AAIA;;uEACO,iBAA2BA,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEC,CAACA,IAAD,IAAS,CAACA,KAAKC,GAFhB;AAAA;AAAA;AAAA;;AAAA,8BAGO,IAAIC,KAAJ,CAAU,cAAV,CAHP;;AAAA;AAAA;AAAA,+BAMc,eAAKC,QAAL,CAAcH,KAAKC,GAAnB,CANd;;AAAA;AAMGG,0BANH;;AAAA,4BAOEA,EAPF;AAAA;AAAA;AAAA;;AAAA,8BAQO,IAAIF,KAAJ,CAAU,cAAV,CARP;;AAAA;AAAA,yDAUIE,EAVJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,W;;;;AAYtB;;;QACgBC,W,GAAAA,W;;AAlBhB;;;;AACA;;;;AACA;;;;;;;;AAgBO,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC/B;AACA,QAAMC,MAAMD,MAAME,KAAN,CAAY,GAAZ,CAAZ;AACA,QAAID,IAAI,CAAJ,MAAW,QAAf,EAAyB;AACrB;AACA,eAAO,uBAAIE,MAAJ,CAAWF,IAAI,CAAJ,CAAX,EAAmB,oBAAUG,UAA7B,CAAP;AACH;AACD,UAAM,IAAIT,KAAJ,CAAU,eAAV,CAAN;AACH","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport constants from '../config/constants';\r\nimport User from '../models/User';\r\n\r\n//Checking if user is authenticated or not before executing request\r\nexport async function requireAuth(user) {\r\n    //Checking if the user context is valid or null\r\n    if (!user || !user._id) {\r\n        throw new Error('Unauthorized');\r\n    }\r\n    //Verifying user id from our database\r\n    const me = await User.findById(user._id);\r\n    if (!me) {\r\n        throw new Error('Unauthorized');\r\n    }\r\n    return me;\r\n}\r\n//Decoding json web token from the user request headers\r\nexport function decodeToken(token) {\r\n    //Getting the Bearer from the headers\r\n    const arr = token.split(' ');\r\n    if (arr[0] === 'Bearer') {\r\n        //Verifying and validating token\r\n        return jwt.verify(arr[1], constants.JWT_SECRET);\r\n    }\r\n    throw new Error('Invalid token');\r\n}"]}